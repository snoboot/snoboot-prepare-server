#!/bin/zsh

if [[ $# -eq 0 ]]; then
  print "Syntax: $(basename $0) /dev/mapper/snoboot-luks-*..." >&2
  print "Available devices: " >&2
  ls -1 /dev/mapper/snoboot-luks-* >&2
  exit 1
fi

if [[ "$(whoami)" != "root" ]]; then
  print "Error: Please run as root" >&2
  exit 1
fi

which pvcreate >/dev/null 2>&1 || apk add lvm2
which mkfs.xfs >/dev/null 2>&1 || apk add xfsprogs

for md in $@; do
  print -- "- $md"
  case "$md" in
    /dev/mapper/snoboot-luks-*) 
       if [[ ! -e "$md" ]]; then
         print "Error: Not a valid device" >&2
         exit 1
       fi
       ;;
    *) print "Error: Not a /dev/mapper/snoboot-luks- device" >&2
       exit 1
  esac
  blkidRes=$(blkid "$md")
  if [[ -n "$blkidRes" ]]; then
    print "Warning: Device may have existing file system: $d" >&2
    print -- $blkidRes | cut -d' ' -f2-
  fi
done

while [[ 1 ]]; do
read "?Proceed with filesystem creation? (y/n) " ask
case "$ask" in
  y|yes) break ;;
  n|no) echo "Aborted" >&2; exit 1 ;;
  *) continue
esac
done

for md in $@; do
  basename=$(basename "$md")
  vgname="gfs-vg-$basename"

  if [[ -e "/dev/$vgname" ]]; then
    for lv in $(ls /dev/$vgname/); do
      lvremove -ff "$lv"
    done
    vgremove -ff "$vgname" || true
    pvremove -ff "$md"
  fi

  pvcreate -ff --yes --dataalignment 256K "$md"

  vgcreate --physicalextentsize 256K "$vgname" "$md"

  # give 5% space for snapshots (5% of 4TB are 200 GB)
  lvcreate -l "95%FREE" --zero n --chunksize 256K --thinpool "$vgname/gfs_pool" --poolmetadatasize 16776960K
  
  lvsize=$(lvs -o lv_size --units b --no-heading "$vgname/gfs_pool" | tr -d ' B')
  if [[ -z "$lvsize" ]]; then
    echo "Error: Could not determine lvsize" >&2
    exit 1
  fi
  # adjust virtual size by 16 GB (used for pool metadata)
  virtualsize=$(( $lvsize / 1024 / 1024 - 16 * 1024 ))

  lvcreate --virtualsize "${virtualsize}M" --thin --name "gfs_lv" --thinpool "$vgname/gfs_pool"

  lvDev="/dev/$vgname/gfs_lv"
  if [[ ! -e "$lvDev" ]]; then
    echo "Error: LV device not found: $lvDev" >&2
    exit 1
  fi

  print
  print "**** Creating XFS filesystem on $lvDev..."
  mkfs.xfs -i size=512 -n size=8192 -d su=256k,sw=1 "$lvDev"
  print

  brickDir=$(mktemp -d -p /data ".slgp.XXXXXXXX")
  print -- "---- Mounting at $brickDir and creating gv0 directory..."
  mount -t xfs "$lvDev" "$brickDir"
  mkdir -p "$brickDir/gv0"
  print -- "---- Unmounting"
  umount "$brickDir"
  rmdir "$brickDir"
  print -- "---- Done with $lvDev"
done

